name: Daily Package Updates

on:
  schedule:
    - cron: '0 4 * * *' # Run daily at 4 AM UTC
  workflow_dispatch: # Allow manual triggering

jobs:
  update-packages:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install Nix
        uses: cachix/install-nix-action@v22
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure Git
        run: |
          git config user.name "NixOS Updater Bot"
          git config user.email "noreply@github.com"

      - name: Create update branch
        run: |
          DATE=$(date +%Y-%m-%d)
          BRANCH_NAME="auto-update-$DATE"
          git checkout -b $BRANCH_NAME
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV

      - name: Update flake inputs
        run: |
          nix flake update --commit-lock-file

      - name: Check for updates
        id: check_updates
        run: |
          if git diff --quiet HEAD~1 HEAD; then
            echo "NO_UPDATES=true" >> $GITHUB_ENV
            echo "No updates available"
          else
            echo "Updates found"
            echo "NO_UPDATES=false" >> $GITHUB_ENV
          fi

      - name: Verify configurations build
        if: env.NO_UPDATES == 'false'
        run: |
          echo "Testing configurations after update..."
          
          # Test flake check
          nix flake check --impure || {
            echo "::error::Flake check failed after updates!"
            exit 1
          }
          
          # Test home-manager configuration
          nix build .#homeConfigurations.chromeos.activationPackage --impure || {
            echo "::error::Home Manager configuration failed to build!"
            exit 1
          }
          
          # Test NixOS configuration (dry-run)
          nix build .#nixosConfigurations.desktop.config.system.build.toplevel --impure || {
            echo "::error::NixOS configuration failed to build!"
            exit 1
          }
          
          echo "All configurations built successfully after updates."

      - name: Push changes
        if: env.NO_UPDATES == 'false'
        run: |
          git push -u origin ${{ env.BRANCH_NAME }}

      - name: Create Pull Request
        if: env.NO_UPDATES == 'false'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { data: pr } = await github.rest.pulls.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `[Automated] Daily package updates`,
              body: `## Daily Package Updates
            
            This PR updates Nix flake inputs to their latest versions.
            
            ### Changes
            
            ${require('child_process').execSync('git log -1 --pretty=%B').toString().trim()}
            
            ### Verification
            
            - âœ… All configurations built successfully
            - âœ… Flake check passed
            
            ðŸ¤– This PR was automatically generated by the daily update workflow`,
              head: '${{ env.BRANCH_NAME }}',
              base: 'main'
            });
            
            console.log(`PR #${pr.number} created: ${pr.html_url}`);